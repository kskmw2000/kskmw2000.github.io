{"componentChunkName":"component---src-templates-blog-post-js","path":"/spring/use-jpa-entity-eventlistener-2/","result":{"data":{"site":{"siteMetadata":{"title":"my developer history","author":"angeloper","siteUrl":"https://kskmw2000.github.io","comment":{"disqusShortName":"","utterances":"kskmw2000/kskmw2000.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"6833ac05-c69a-59be-b247-d65cd57e544c","excerpt":"어제 JPA의 Entity EventListener에 대해서 활용방법을 알아보았습니다. Entity EventListener의 기능을 통해서 모든 테이블에 존재하는 등록일, 수정일을 변경되는 부분을 확인해 보았습니다. 하지만, 뭔가 꺼림직합니다. 그 이유는 모든 Entity에 다음과 같은 문법을 넣어야 한다는 사실이 좀 아쉽기만 합니다. 그럼, 중복을 제거할 수 있는 방법은 없을까요? EventListener…","html":"<p>어제 JPA의 Entity EventListener에 대해서 활용방법을 알아보았습니다.<br>\nEntity EventListener의 기능을 통해서 모든 테이블에 존재하는 등록일, 수정일을 변경되는 부분을 확인해 보았습니다.<br>\n하지만, 뭔가 꺼림직합니다. 그 이유는 모든 Entity에 다음과 같은 문법을 넣어야 한다는 사실이 좀 아쉽기만 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// domain/Student.java</span>\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@NoArgsConstructor</span>\n<span class=\"token annotation punctuation\">@ToString</span>\n<span class=\"token annotation punctuation\">@Entity</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Id</span>\n    <span class=\"token annotation punctuation\">@GeneratedValue</span><span class=\"token punctuation\">(</span>strategy <span class=\"token operator\">=</span> <span class=\"token class-name\">GenerationType</span><span class=\"token punctuation\">.</span>AUTO<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> createdAt<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> updatedAt<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@PrePersist</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">prePersist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCreatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setUpdatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@PreUpdate</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token class-name\">PreUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setUpdatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그럼, 중복을 제거할 수 있는 방법은 없을까요?</p>\n<p>EventListener를 사용하면서 제거하는 방법을 한번 살펴보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// listener/Auditable.java</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Auditable</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">LocalDateTime</span> <span class=\"token function\">getCreatedAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">LocalDateTime</span> <span class=\"token function\">getUpdatedAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setCreatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span> createdAt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setUpdatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span> updatedAt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// listener/MyEntityListner.java</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyEntityListner</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@PrePersist</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">prePersist</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>o <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Auditable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Auditable</span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCreatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Auditable</span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setUpdatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@PreUpdate</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">preUpdate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>o <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Auditable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Auditable</span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setUpdatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// domain/Student.java</span>\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@NoArgsConstructor</span>\n<span class=\"token annotation punctuation\">@ToString</span>\n<span class=\"token annotation punctuation\">@Entity</span>\n<span class=\"token annotation punctuation\">@EntityListeners</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token class-name\">MyEntityListner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Auditable</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Id</span>\n    <span class=\"token annotation punctuation\">@GeneratedValue</span><span class=\"token punctuation\">(</span>strategy <span class=\"token operator\">=</span> <span class=\"token class-name\">GenerationType</span><span class=\"token punctuation\">.</span>AUTO<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> createdAt<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> updatedAt<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>테스트 코드</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">StudentRepositoryTest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token class-name\">StudentRepository</span> studentRepository<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">entityListenerTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Student</span> student <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        student<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"angeloper\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        studentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        studentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        student<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kskmw2000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        studentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        studentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>테스트 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Student(id=6, name=angeloper, createdAt=2022-01-10T19:51:52.186, updatedAt=2022-01-10T19:51:52.187)\nStudent(id=6, name=kskmw2000, createdAt=2022-01-10T19:51:52.186, updatedAt=2022-01-10T19:51:52.440)</code></pre></div>\n<p>그럼에도 Model의 클래스에 <code class=\"language-text\">@EntityListeners(value = MyEntityListner.class)</code> 구문과 <code class=\"language-text\">implements Auditable</code> 그리고 또한 <code class=\"language-text\">createdAt</code>, <code class=\"language-text\">updatedAt</code>을 계속적으로 넣어준다는 부분이 존재합니다. 이에, Spring의 상속, Auditing 기능을 사용하여 중복코드를 없애는 작업을 해 도록 하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// App.java</span>\n<span class=\"token annotation punctuation\">@SpringBootApplication</span>\n<span class=\"token annotation punctuation\">@EnableJpaAuditing</span>    <span class=\"token comment\">// Spring 전체적으로 Auditing 기능을 사용할 수 있도록 설정하였습니다.</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">App</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// domain/BaseEntity.java</span>\n<span class=\"token comment\">// createAt과 updatedAt의 중복 코드를 없애는 작업 및 @createdDate와 @LastModifiedDate를 사용하여 감시가 되도록 합니다.</span>\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@MappedSuperclass</span>       <span class=\"token comment\">// 상속 받는 클래스의 속성으로 포함하도록 하겠다라는 의미</span>\n<span class=\"token annotation punctuation\">@EntityListeners</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token class-name\">AuditingEntityListener</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BaseEntity</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@CreatedDate</span>\n    <span class=\"token annotation punctuation\">@Column</span><span class=\"token punctuation\">(</span>updatable <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> createdAt<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@LastModifiedDate</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> updatedAt<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// listener/Auditable.java</span>\n<span class=\"token comment\">// 인터페이스를 통해서 getter/setter Method를 구현하도록 합니다.</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Auditable</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">LocalDateTime</span> <span class=\"token function\">getCreatedAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">LocalDateTime</span> <span class=\"token function\">getUpdatedAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setCreatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span> createdAt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setUpdatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span> updatedAt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// model/Student.java</span>\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@NoArgsConstructor</span>\n<span class=\"token annotation punctuation\">@ToString</span><span class=\"token punctuation\">(</span>callSuper <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Entity</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseEntity</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Auditable</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Id</span>\n    <span class=\"token annotation punctuation\">@GeneratedValue</span><span class=\"token punctuation\">(</span>strategy <span class=\"token operator\">=</span> <span class=\"token class-name\">GenerationType</span><span class=\"token punctuation\">.</span>AUTO<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>테스트코드</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">StudentRepositoryTest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token class-name\">StudentRepository</span> studentRepository<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">entityListenerTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Student</span> student <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        student<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"angeloper\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        studentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        studentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        student<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kskmw2000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        studentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        studentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>테스트 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Student(super=BaseEntity(createdAt=2022-01-10T20:02:25.649, updatedAt=2022-01-10T20:02:25.649), id=6, name=angeloper)\nStudent(super=BaseEntity(createdAt=2022-01-10T20:02:25.649, updatedAt=2022-01-10T20:02:25.880), id=6, name=kskmw2000)</code></pre></div>\n<p>확인하셨나요?? 이로써 모델객체에 규칙이 생기긴 했지만 필요한 컬럼만 넣으면 되는 효과를 보았습니다. 더불어, 개발자의 경우에는 등록일, 수정일을 신경쓸 필요가 없어졌습니다.</p>\n<p>또한, 이 기능을 활용하여 테이블의 이력을 남기는 부분 또한 쉽게 가능하다고 합니다.\n이 부분은 다음 부분에서 확인해 보도록 하겠습니다.</p>\n<blockquote>\n<p>Fastcampus의 스프링 강좌를 보고 정리한 내역입니다.</p>\n</blockquote>","frontmatter":{"title":"Spring JPA의 Entity EventListener 사용-2","date":"January 10, 2022"}}},"pageContext":{"slug":"/spring/use-jpa-entity-eventlistener-2/","previous":{"fields":{"slug":"/spring/use-jpa-entity-eventlistner/"},"frontmatter":{"title":"Spring JPA의 Entity EventListener 사용"}},"next":null}}}