{"componentChunkName":"component---src-templates-blog-post-js","path":"/spring/use-jpa-entity-eventlistner/","result":{"data":{"site":{"siteMetadata":{"title":"my developer history","author":"angeloper","siteUrl":"https://kskmw2000.github.io","comment":{"disqusShortName":"","utterances":"kskmw2000/kskmw2000.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"7c2b1e76-ba08-56ff-b3d6-efab4763c96e","excerpt":"안녕하세요. 오늘은 Spring JPA의 Entity EventListener에 대해서 알아보려고 합니다. Entity EventListener Entity EventListener의 종류는 @PostLoad, @PrePersist, @PostPersist, @PreUpdate, @PostUpdate, @PreRemove, @PostRemove 가 존재합니다. 문구에서와 같이 Pre(이전), Post(이후), Load, Persist, Update, Remove…","html":"<p>안녕하세요. 오늘은 Spring JPA의 Entity EventListener에 대해서 알아보려고 합니다.</p>\n<h2 id=\"entity-eventlistener\" style=\"position:relative;\"><a href=\"#entity-eventlistener\" aria-label=\"entity eventlistener permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Entity EventListener</h2>\n<ul>\n<li>\n<p>Entity EventListener의 종류는 @PostLoad, @PrePersist, @PostPersist, @PreUpdate, @PostUpdate, @PreRemove, @PostRemove 가 존재합니다. 문구에서와 같이 Pre(이전), Post(이후), Load, Persist, Update, Remove로 분별해서 보시는 좋을 것 같습니다.</p>\n<ul>\n<li><code class=\"language-text\">@PostLoad</code> : 엔티티가 영속성 컨텍스트에 조회된 직후 또는 refresh를 호출한 후 동작됩니다.</li>\n<li><code class=\"language-text\">@PrePersist</code> : persist() 메서드를 호출해서 엔터티를 영속성 컨텍스트에 관리하기 직전에 호출됩니다.</li>\n<li><code class=\"language-text\">@PreUpdate</code> : flush나 commit을 호출해서 엔티티를 데이터베이스에 수정하기 직전에 호출됩니다.</li>\n<li><code class=\"language-text\">@PreRemove</code> : remove() 메서드를 호출해서 엔티티를 영속성 컨텍스트에서 삭제하기 직전에 호출됩니다.</li>\n<li><code class=\"language-text\">@PostPersist</code> : flush나 commit을 호출해서 엔티티를 데이터베이스에 저장한 직후에 호출됩니다.</li>\n<li><code class=\"language-text\">@PostUpdate</code> : flush나 commit을 호출해서 엔티티를 데이터베이스에 수정한 직후에 호출됩니다.</li>\n<li><code class=\"language-text\">@PostRemove</code> : flush나 commit을 호출해서 엔티티를 데이터베이스에 삭제한 직후에 호출됩니다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"예제소스\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C%EC%86%8C%EC%8A%A4\" aria-label=\"예제소스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제소스</h3>\n<ul>\n<li>domain/Student.java</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@NoArgsConstructor</span>\n<span class=\"token annotation punctuation\">@ToString</span>\n<span class=\"token annotation punctuation\">@Entity</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Id</span>\n    <span class=\"token annotation punctuation\">@GeneratedValue</span><span class=\"token punctuation\">(</span>strategy <span class=\"token operator\">=</span> <span class=\"token class-name\">GenerationType</span><span class=\"token punctuation\">.</span>AUTO<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> createdAt<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> updatedAt<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@PostLoad</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">postLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=== postLoad ===\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@PrePersist</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">prePersist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=== prePersist ===\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@PreUpdate</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token class-name\">PreUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=== PreUpdate ===\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@PreRemove</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token class-name\">PreRemove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=== PreRemove ===\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@PostPersist</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token class-name\">PostPersist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=== PostPersist ===\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@PostUpdate</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token class-name\">PostUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=== PostUpdate ===\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@PostRemove</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token class-name\">PostRemove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=== PostRemove ===\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>repository/StudentRepository.java</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">StudentRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">JpaRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StudentRepository</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>테스트소스 : StudentRepositoryTest.java</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">StudentRepositoryTest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token class-name\">StudentRepository</span> studentRepository<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">entityListenerTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"======= 1 =========\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Student</span> student <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        student<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"angeloper\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        student<span class=\"token punctuation\">.</span><span class=\"token function\">setCreatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        student<span class=\"token punctuation\">.</span><span class=\"token function\">setUpdatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        studentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"======= 2 =========\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        student<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kskmw2000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        student<span class=\"token punctuation\">.</span><span class=\"token function\">setUpdatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        studentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"======= 3 =========\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        studentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"======= 4 =========\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>테스트 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">======= 1 =========\n=== prePersist ===\nHibernate:\n    call next value for hibernate_sequence\nHibernate:\n    insert\n    into\n        student\n        (created_at, name, updated_at, id)\n    values\n        (?, ?, ?, ?)\n=== PostPersist ===\n======= 2 =========\nHibernate:\n    select\n        student0_.id as id1_2_0_,\n        student0_.created_at as created_2_2_0_,\n        student0_.name as name3_2_0_,\n        student0_.updated_at as updated_4_2_0_\n    from\n        student student0_\n    where\n        student0_.id=?\n=== postLoad ===\n=== PreUpdate ===\nHibernate:\n    update\n        student\n    set\n        created_at=?,\n        name=?,\n        updated_at=?\n    where\n        id=?\n=== PostUpdate ===\n======= 3 =========\nHibernate:\n    select\n        student0_.id as id1_2_0_,\n        student0_.created_at as created_2_2_0_,\n        student0_.name as name3_2_0_,\n        student0_.updated_at as updated_4_2_0_\n    from\n        student student0_\n    where\n        student0_.id=?\n=== postLoad ===\n=== PreRemove ===\nHibernate:\n    delete\n    from\n        student\n    where\n        id=?\n=== PostRemove ===\n======= 4 =========</code></pre></div>\n<h2 id=\"시용예시\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9A%A9%EC%98%88%EC%8B%9C\" aria-label=\"시용예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시용예시</h2>\n<ul>\n<li>이 기능을 보자면 테이블에 데이터를 입력할시 생성일, 수정일을 입력하고, 수정할 시에는 수정일만 변경할 수 있을 것 같다라는 생각을 할 것입니다.\n이에, 이 기능을 다음과 같이 변경이 가능합니다.</li>\n</ul>\n<h3 id=\"예제소스-1\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C%EC%86%8C%EC%8A%A4-1\" aria-label=\"예제소스 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제소스</h3>\n<ul>\n<li>domain/Student.java</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@NoArgsConstructor</span>\n<span class=\"token annotation punctuation\">@ToString</span>\n<span class=\"token annotation punctuation\">@Entity</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Id</span>\n    <span class=\"token annotation punctuation\">@GeneratedValue</span><span class=\"token punctuation\">(</span>strategy <span class=\"token operator\">=</span> <span class=\"token class-name\">GenerationType</span><span class=\"token punctuation\">.</span>AUTO<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> createdAt<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> updatedAt<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@PrePersist</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">prePersist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCreatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setUpdatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@PreUpdate</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token class-name\">PreUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setUpdatedAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>repository/StudentRepository.java</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">StudentRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">JpaRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StudentRepository</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>테스트소스 : StudentRepositoryTest.java</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">StudentRepositoryTest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token class-name\">StudentRepository</span> studentRepository<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">entityListenerTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Student</span> student <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        student<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"angeloper\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        studentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        studentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        student<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kskmw2000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        studentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        studentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>테스트 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Hibernate:\n    call next value for hibernate_sequence\nHibernate:\n    insert\n    into\n        student\n        (created_at, name, updated_at, id)\n    values\n        (?, ?, ?, ?)\nHibernate:\n    select\n        student0_.id as id1_2_,\n        student0_.created_at as created_2_2_,\n        student0_.name as name3_2_,\n        student0_.updated_at as updated_4_2_\n    from\n        student student0_\nStudent(id=6, name=angeloper, createdAt=2022-01-09T20:05:16.210, updatedAt=2022-01-09T20:05:16.210)\nHibernate:\n    select\n        student0_.id as id1_2_0_,\n        student0_.created_at as created_2_2_0_,\n        student0_.name as name3_2_0_,\n        student0_.updated_at as updated_4_2_0_\n    from\n        student student0_\n    where\n        student0_.id=?\nHibernate:\n    update\n        student\n    set\n        created_at=?,\n        name=?,\n        updated_at=?\n    where\n        id=?\nHibernate:\n    select\n        student0_.id as id1_2_,\n        student0_.created_at as created_2_2_,\n        student0_.name as name3_2_,\n        student0_.updated_at as updated_4_2_\n    from\n        student student0_\nStudent(id=6, name=kskmw2000, createdAt=2022-01-09T20:05:16.210, updatedAt=2022-01-09T20:05:16.478)</code></pre></div>\n<ul>\n<li>보셨나요? 테스트 데이터를 입력할 시 또는 수정할 시에는 setCreatedAt, setUpdatedAt를 사용하지 않았지만, Entity EventListener를 사용하므로써 값이 정상적으로 들어간 부분을 확인할 수 있었습니다. 그러나, 모든 Entity Class에 넣는 것은 Don`t Repeat Yourself(DRY원칙) 및 중복코드가 너무 많이 생기는 부분이 있습니다.</li>\n</ul>\n<p>이 부분에 대해서는 다음 섹션을 통해서 중복을 제거할 수 있는 방법을 알아보겠습니다.</p>\n<blockquote>\n<p>Fastcampus의 스프링 강좌를 보고 정리한 내역입니다.</p>\n</blockquote>","frontmatter":{"title":"Spring JPA의 Entity EventListener 사용","date":"January 09, 2022"}}},"pageContext":{"slug":"/spring/use-jpa-entity-eventlistner/","previous":{"fields":{"slug":"/Frontend/use-svelte-1/"},"frontmatter":{"title":"스벨트 사용하기-1"}},"next":{"fields":{"slug":"/spring/use-jpa-entity-eventlistener-2/"},"frontmatter":{"title":"Spring JPA의 Entity EventListener 사용-2"}}}}}